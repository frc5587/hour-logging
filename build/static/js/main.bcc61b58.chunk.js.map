{"version":3,"sources":["assets/images/robotics_logo.svg","components/button.js","components/gsheetsApi.js","components/registerBox.js","components/signInBox.js","components/signedInList.js","App.js","reportWebVitals.js","index.js"],"names":["Button","onClick","children","smallBtn","onMouseUp","onMouseDown","className","doc","GoogleSpreadsheet","spreadsheet","ID","loaded","loader","a","useServiceAccountAuth","credentials","loadInfo","checkIfLoggedInTooLong","setInterval","then","getAllSignedIn","rows","peopleToSignOut","row","Date","getTodaysDate","push","id","signOut","getSheet","sheetName","sheetsByTitle","getAllMembers","membersSheet","getRows","signedInSheet","checkIfIdIsRegistered","getName","setName","name","i","length","save","addRow","Name","getDateTime","isSignedIn","signedIn","date","time","Time","outTime","signedInRow","hoursSheet","delete","ids","outTimes","undefined","map","Error","header","_sheet","headerValues","allIDs","v","newSignedOuts","removes","idx","indexOf","console","log","filter","includes","clear","setHeaderRow","addRows","datetime","toLocaleDateString","zeroPad","getHours","getMinutes","string","RegisterBox","state","nameValue","idValue","error","handleNameChange","bind","handleIdChange","handleClick","handleKeyPress","event","this","setState","target","value","key","blur","clearValues","registerMember","updated","type","placeholder","onChange","onKeyPress","React","Component","SignInBox","props","nameIdValue","autocompleteValue","currentMember","possibleMembers","memberData","showDropDown","success_txt","inputRef","createRef","handleTextChange","openDropDown","closeDropDown","handleSignInClick","handleDropDownItemClick","updateDropDown","text","member","reverse","lowerText","toLowerCase","format","fwd","rvs","cor","slice","noDelay","setTimeout","changeInputTextTo","signIn","localSignInFunc","updateFunc","newText","x","y","width","current","offsetLeft","offsetTop","scrollWidth","autoFocus","style","zIndex","spellCheck","ref","onBlur","transform","DropDown","data","onItemClick","tabIndex","SignedInList","lastMouseDown","handleMultiSignOutClick","setLastMouseDown","e","timeStamp","pending","multiSignOut","onSignedOutBtn","SignedInItem","App","currentlySignedIn","pendingSignIn","pendingSignOut","isOnline","window","navigator","onLine","updateSignedIn","addNewLocalSignIn","handleSignOut","handleMultiSignOut","addEventListener","onlineChangeHandler","signedInIDs","concat","IDs","signOutMultiple","src","roboticsLogo","alt","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bcc61b58.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/robotics_logo.264ccd8c.svg\";","import React from 'react'\r\n\r\nconst Button = ({onClick, children, smallBtn, onMouseUp, onMouseDown}) => (\r\n    <div className=\"btn-container\">\r\n        <button className={smallBtn? \"small-btn-primary\" : \"btn btn-primary\"} onClick={onClick} onMouseUp={onMouseUp} onMouseDown={onMouseDown}>{children}</button>\r\n    </div>\r\n)\r\n\r\nexport default Button;","import {GoogleSpreadsheet} from \"google-spreadsheet\"\r\nimport credentials from \"../assets/tokens/service_auth_token.json\"\r\nimport spreadsheet from \"../assets/tokens/spreadsheet.json\"\r\n\r\nconst doc = new GoogleSpreadsheet(spreadsheet.ID);\r\n\r\nvar loaded = false\r\n\r\nconst loader = (async () => {\r\n    await doc.useServiceAccountAuth(credentials)\r\n    await doc.loadInfo()\r\n\r\n    checkIfLoggedInTooLong()\r\n    setInterval(checkIfLoggedInTooLong, 3600000) // repeats every hour\r\n})().then(() => loaded = true)\r\n\r\nexport async function checkIfLoggedInTooLong() {\r\n    const rows = await getAllSignedIn()\r\n    const peopleToSignOut = []\r\n\r\n    for (let row of rows) {\r\n        if (new Date(row[\"Date\"]) < getTodaysDate()) {\r\n            peopleToSignOut.push(row[\"ID\"])\r\n        }\r\n    }\r\n\r\n    for (let id of peopleToSignOut) {\r\n        await signOut(id, \"18:00\")  // signs people out at 6:00 pm\r\n    }\r\n}\r\n\r\nexport async function getSheet(sheetName) {\r\n    if (loaded) {\r\n        return doc.sheetsByTitle[sheetName]\r\n    } else {\r\n        await loader\r\n        return getSheet(sheetName)\r\n    }\r\n}\r\n\r\nexport async function getAllMembers() {\r\n    const membersSheet = await getSheet(\"Members\")\r\n    return await membersSheet.getRows()\r\n    \r\n}\r\n\r\nexport async function getAllSignedIn() {\r\n    const signedInSheet = await getSheet(\"Currently Signed In\")\r\n    return await signedInSheet.getRows()\r\n}\r\n\r\nexport async function checkIfIdIsRegistered(id) {\r\n    const rows = await getAllMembers()\r\n\r\n    for (const row of rows) {\r\n        if (row[\"ID\"] === id) {\r\n            return true\r\n        }\r\n    }\r\n\r\n    return false\r\n}\r\n\r\nexport async function getName(id) {\r\n    const rows = await getAllMembers()\r\n\r\n    for (const row of rows) {\r\n        if (row[\"ID\"] === id) {\r\n            return row[\"Name\"]\r\n        }\r\n    }\r\n    return null\r\n}\r\n\r\nexport async function setName(name, id) {\r\n    const rows = await getAllMembers()\r\n\r\n    for (let i = 0; i < rows.length; i++) {\r\n        if (rows[i][\"ID\"] === id) {\r\n            rows[i][\"Name\"] = name\r\n            await rows[i].save()\r\n            break\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport async function registerMember(name, id) {\r\n    const isRegistered = await checkIfIdIsRegistered(id)\r\n\r\n    if (isRegistered) {\r\n        const loggedName = await getName(id)\r\n\r\n        if (loggedName !== name) {\r\n            await setName(name, id)\r\n            return true\r\n        }\r\n    } else {\r\n        const membersSheet = doc.sheetsByTitle[\"Members\"]\r\n        await membersSheet.addRow({Name: name, ID: id, \"Date Added\": getDateTime()[0]})\r\n        return true\r\n    }\r\n    return false\r\n}\r\n\r\nexport async function isSignedIn(id) {\r\n    const signedIn = await getAllSignedIn()\r\n\r\n    for (let row of signedIn) {\r\n        if (row[\"ID\"] === id) {\r\n            return true\r\n        }\r\n    }\r\n\r\n    return false\r\n}\r\n\r\nexport async function signIn(id) {\r\n    const isRegistered = await checkIfIdIsRegistered(id)\r\n\r\n    if (isRegistered) {\r\n        if (await isSignedIn(id)) {\r\n            return true\r\n        } else {\r\n            const signedInSheet = doc.sheetsByTitle[\"Currently Signed In\"]\r\n            const [date, time] = getDateTime()\r\n            await signedInSheet.addRow({Date: date, Time: time, Name: await getName(id), ID: id})\r\n            return true\r\n        }\r\n    } else {\r\n        return false\r\n    }\r\n}\r\n\r\n/** \r\n * uses tons of API calls, use signOutMultiple instead for signing out more than one person at a time\r\n */\r\nexport async function signOut(id, outTime) {\r\n    outTime = outTime ? outTime : getDateTime()[1]\r\n\r\n    let signedIn = await getAllSignedIn()\r\n\r\n    for (let signedInRow of signedIn) {\r\n        if (signedInRow.ID === id) {\r\n            let hoursSheet = await getSheet(\"Hours\")\r\n            await hoursSheet.addRow({Date: signedInRow.Date, Name: await getName(id), ID: id, \"Time In\": signedInRow.Time, \"Time Out\": outTime})\r\n            await signedInRow.delete()\r\n            return true\r\n        }\r\n    }\r\n    return false\r\n}\r\n\r\nexport async function signOutMultiple(ids, outTimes) {\r\n    if (outTimes === undefined) {\r\n        outTimes = ids.map(() => getDateTime()[1])\r\n    } else if (ids.length !== outTimes.length) {\r\n        throw new Error(\"`OutTimes` needs to be the same length as `ids`\")\r\n    }\r\n    let signedInSheet = await getSheet(\"Currently Signed In\")\r\n    let signedIn = await signedInSheet.getRows()\r\n\r\n    let header = signedIn[0]._sheet.headerValues\r\n    let allIDs = signedIn.map(v => v.ID)\r\n    let newSignedOuts = []\r\n    \r\n    let removes = []\r\n    for (let [id, outTime] of ids.map((v, i) => [v, outTimes[i]])) {\r\n        let idx = allIDs.indexOf(id) \r\n        if (idx !== -1) {\r\n            let row = signedIn[idx]\r\n            removes.push(idx)\r\n            newSignedOuts.push({Date: row.Date, Name: await getName(id), ID: id, \"Time In\": row.Time, \"Time Out\": outTime})\r\n\r\n        } else {\r\n            console.log(\"Not signed in!\", id)\r\n        }\r\n    }\r\n\r\n    signedIn = signedIn.filter((v, i) => !removes.includes(i))\r\n\r\n    await signedInSheet.clear()\r\n    await signedInSheet.setHeaderRow(header)\r\n    \r\n    if (signedIn.length > 0) {\r\n        await signedInSheet.addRows(signedIn)\r\n    }\r\n\r\n    let hoursSheet = await getSheet(\"Hours\")\r\n    await hoursSheet.addRows(newSignedOuts)\r\n\r\n}\r\n\r\nexport function getDateTime() {\r\n    const datetime = new Date()\r\n\r\n    return [datetime.toLocaleDateString(), `${zeroPad(datetime.getHours())}:${zeroPad(datetime.getMinutes())}`]\r\n}\r\n\r\nfunction zeroPad(string) {\r\n    return (\"\" + string).length === 1? \"0\" + string : string\r\n}\r\n\r\nfunction getTodaysDate() {\r\n    return new Date(new Date().toLocaleDateString())\r\n}\r\n","import React from 'react'\r\nimport \"./../assets/scss/shared.scss\"\r\nimport Button from \"./button\"\r\nimport {registerMember} from \"./gsheetsApi\"\r\n\r\nexport default class RegisterBox extends React.Component {\r\n    constructor() {\r\n        super()\r\n\r\n        this.state = {nameValue: \"\", idValue: \"\", error: \"\"}\r\n\r\n        this.handleNameChange = this.handleNameChange.bind(this)\r\n        this.handleIdChange = this.handleIdChange.bind(this)\r\n        this.handleClick = this.handleClick.bind(this)\r\n        this.handleKeyPress = this.handleKeyPress.bind(this)\r\n    }\r\n\r\n    handleNameChange(event) {\r\n        this.setState({nameValue: event.target.value})\r\n    }\r\n    \r\n    handleIdChange(event) {\r\n        this.setState({idValue: event.target.value})\r\n    }\r\n\r\n    handleKeyPress(event) {\r\n        if (event.key === \"Enter\") {\r\n            this.handleClick()\r\n            event.target.blur()\r\n        }\r\n    }\r\n\r\n    handleClick() {\r\n        if (this.state.nameValue === \"\" || this.state.idValue === \"\") {\r\n            this.setState({error: \"Invalid input\"})\r\n        } else {\r\n            this.setState({error: \"\"})\r\n            this.clearValues()\r\n            registerMember(this.state.nameValue, this.state.idValue).then(updated => updated ? null : this.setState({error: \"Duplicate Member Entry\"}))\r\n        }\r\n    }\r\n\r\n    clearValues() {\r\n        this.setState({nameValue: \"\", idValue: \"\"})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className=\"row row-input\">\r\n                    <input type=\"text\" placeholder=\"Name\" value={this.state.nameValue} onChange={this.handleNameChange} onKeyPress={this.handleKeyPress}/>\r\n                    <input type=\"number\" placeholder=\"School ID\" value={this.state.idValue} onChange={this.handleIdChange} onKeyPress={this.handleKeyPress}/>\r\n                    <Button onClick={this.handleClick}>Register</Button>\r\n                </div>\r\n                {this.state.error ? <h3 className=\"error\">Error: {this.state.error}</h3> : \"\"}\r\n            </>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport \"./../assets/scss/shared.scss\"\r\nimport Button from \"./button\"\r\nimport {getAllMembers, signIn} from \"./gsheetsApi\"\r\n\r\nexport default class SignInBox extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {nameIdValue: \"\", autocompleteValue: \"\", currentMember: null, possibleMembers: [], memberData: [], showDropDown: false, error: \"\", success_txt: \"\"}\r\n\r\n        this.inputRef = React.createRef();\r\n        this.handleTextChange = this.handleTextChange.bind(this)\r\n        this.openDropDown = this.openDropDown.bind(this)\r\n        this.closeDropDown = this.closeDropDown.bind(this)\r\n        this.handleSignInClick = this.handleSignInClick.bind(this)\r\n        this.handleDropDownItemClick = this.handleDropDownItemClick.bind(this)\r\n        this.handleKeyPress = this.handleKeyPress.bind(this)\r\n\r\n        getAllMembers().then(memberData => {this.setState({memberData});this.updateDropDown(this.state.nameIdValue)})\r\n    }\r\n\r\n    handleTextChange(event) {\r\n        let text = event.target.value\r\n        this.setState({nameIdValue: text})\r\n        this.updateDropDown(text)\r\n\r\n        if (text === \"\") {  // if input is blank, clear error message (if it exists)\r\n            this.setState({error: \"\"})\r\n            this.closeDropDown(true)\r\n        } else {\r\n            this.openDropDown()\r\n        }\r\n\r\n        if (this.state.success_txt) {\r\n            this.setState({success_txt: \"\"})\r\n        }\r\n    }\r\n\r\n    format(member, reverse=false) {\r\n        if (!reverse) {\r\n            return `${member.Name} | ${member.ID}`\r\n        } else {\r\n            return `${member.ID} | ${member.Name}`\r\n        }\r\n    }\r\n\r\n    updateDropDown(text) {\r\n        if (text === \"\") {\r\n            this.setState({possibleMembers: this.state.memberData, currentMember: null, autocompleteValue: \"\"})\r\n        } else {\r\n            let lowerText = text.toLowerCase()\r\n            let possibleMembers = []\r\n            let autocompleteValue =  \"\"\r\n            let currentMember = null\r\n\r\n            for (let member of this.state.memberData) {\r\n                let [fwd, rvs] = [this.format(member), this.format(member, true)]\r\n                let cor = \"\"\r\n\r\n                if (lowerText.length <= fwd.length) {\r\n                    if (lowerText === fwd.slice(0, lowerText.length).toLowerCase()) {\r\n                        possibleMembers.push(member)\r\n                        cor = fwd\r\n                        \r\n                    } else if (lowerText === rvs.slice(0, lowerText.length).toLowerCase()) {\r\n                        possibleMembers.push(member)\r\n                        cor = rvs\r\n                    }\r\n\r\n                    if (possibleMembers.length === 1 && cor) {\r\n                        autocompleteValue = text + cor.slice(text.length)\r\n                        currentMember = member\r\n                    }\r\n                } \r\n            }\r\n\r\n            this.setState({possibleMembers, currentMember, autocompleteValue})\r\n        }\r\n    }\r\n\r\n    openDropDown() {\r\n        this.setState({showDropDown: true})\r\n        getAllMembers().then(memberData => {this.setState({memberData});this.updateDropDown(this.state.nameIdValue)})\r\n    }\r\n\r\n    closeDropDown(noDelay=false) {\r\n        if (noDelay) {\r\n            this.setState({showDropDown: false})\r\n        } else {\r\n            // delay so that when someone clicks on the drop down menu it doesn't immediately close\r\n            // instead, it can now process their input\r\n            setTimeout(() => this.setState({showDropDown: false}), 400)\r\n        }\r\n    }\r\n\r\n    handleSignInClick() {\r\n        this.closeDropDown()\r\n        if (this.state.currentMember && this.props.signedIn.map(v => v.ID).includes(this.state.currentMember.ID)) {\r\n            this.changeInputTextTo(\"\")\r\n            this.setState({success_txt: `Already Signed In: ${this.state.currentMember.Name}`})\r\n        } else if (this.state.currentMember) {\r\n            let member = this.state.currentMember\r\n\r\n            signIn(member.ID)\r\n            this.props.localSignInFunc(member.Name, member.ID)\r\n            this.changeInputTextTo(\"\")\r\n            this.setState({success_txt: `Sign in Successful: ${member.Name}`})\r\n            setTimeout(this.props.updateFunc, 3000)\r\n        } else if (this.state.nameIdValue !== \"\") {\r\n            this.setState({error: \"Unknown Member\"})\r\n        }\r\n    }\r\n\r\n    handleDropDownItemClick(memberData) {\r\n        this.changeInputTextTo(this.format(memberData))\r\n        setTimeout(this.handleSignInClick, 500)  // delay to allow state to update\r\n    }\r\n\r\n    handleKeyPress(event) {\r\n        if (event.key === \"Enter\") {\r\n            if (this.state.currentMember) {\r\n                this.changeInputTextTo(this.format(this.state.currentMember))\r\n            }\r\n            this.handleSignInClick()\r\n        }\r\n    }\r\n\r\n    changeInputTextTo(newText) {\r\n        this.handleTextChange({target: {value: newText}})\r\n    }\r\n\r\n    render() {\r\n        var [x, y, width] = [-10000, -10000, 0]\r\n        if (this.inputRef.current !== null) {\r\n            x = this.inputRef.current.offsetLeft\r\n            y = this.inputRef.current.offsetTop\r\n            width = this.inputRef.current.scrollWidth\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <div className=\"row row-input pos-relative\">\r\n                    <input type=\"text\" placeholder=\"Name or ID\" autoFocus=\"autofocus\" style={{zIndex: 100, width: \"40vw\"}} spellCheck=\"false\" value={this.state.nameIdValue} onChange={this.handleTextChange} ref={this.inputRef} onBlur={() => {this.closeDropDown()}} onKeyPress={this.handleKeyPress} />\r\n                    <Button onClick={this.handleSignInClick}>Sign In</Button>\r\n                    {this.state.showDropDown ? \r\n                        <div className=\"drop-down\" style={{transform: `translate(${x}px, ${y}px)`, width: `${width}px`}}>\r\n                            <p className=\"autocomplete\">{this.state.autocompleteValue}</p>\r\n                            <DropDown data={this.state.possibleMembers} onItemClick={this.handleDropDownItemClick} format={this.format}/>\r\n                        </div> :\r\n                        \"\"}\r\n                </div>\r\n                {this.state.error ? <h3 className=\"error\">Error: {this.state.error}</h3> : \"\"}\r\n                {this.state.success_txt ? <h3 className=\"success\">{this.state.success_txt}</h3> : \"\"}\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nfunction DropDown ({data, onItemClick, format}) {\r\n    if (data.length > 0) {\r\n        return (\r\n            <ul className=\"drop-down-box\" tabIndex=\"0\">\r\n                {data.map((member, i) => <li key={i}><p onClick={() => onItemClick(member)}>{format(member)}</p></li>)}\r\n            </ul>\r\n        )\r\n    } else {\r\n        return \"\"\r\n    }\r\n\r\n}","import React from 'react'\r\nimport \"./../assets/scss/shared.scss\"\r\nimport Button from \"./button\"\r\nimport {signOut} from \"./gsheetsApi\"\r\n\r\nexport default class SignedInList extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.lastMouseDown = null\r\n        this.state = {}\r\n\r\n        this.handleMultiSignOutClick = this.handleMultiSignOutClick.bind(this)\r\n        this.setLastMouseDown = this.setLastMouseDown.bind(this)\r\n    }\r\n\r\n    handleMultiSignOutClick(e) {\r\n        if (e.timeStamp - this.lastMouseDown > 500) {\r\n            if (this.props.signedIn.filter(v => !v.pending).length > 0) {\r\n                this.props.multiSignOut(this.props.signedIn.filter(v => !v.pending).map(v => v.ID))\r\n            } else {\r\n                console.log(\"no one is logged in\")\r\n            }\r\n        } else {\r\n            console.log(\"NO\")\r\n        }\r\n    }\r\n\r\n    setLastMouseDown(e) {\r\n        this.lastMouseDown = e.timeStamp\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className=\"separator bold\">{this.props.signedIn.length} Currently Signed In</div>\r\n                <ul className=\"series\">\r\n                    <li className=\"bold signed-in-list-item\">\r\n                        <h2>Date</h2>\r\n                        <h2>Time In</h2>\r\n                        <h2>Name</h2>\r\n                        <Button smallBtn onMouseUp={this.handleMultiSignOutClick} onMouseDown={this.setLastMouseDown}>Sign Out All</Button>\r\n                    </li>\r\n                    {\r\n                        this.props.signedIn.length > 0? \r\n                        this.props.signedIn.map(log => <SignedInItem data={log} onSignedOutBtn={() => this.props.signOut(log.ID)} key={log.Name}/>) : \r\n                            <li className=\"flex-center\"><h3>No one is signed in</h3></li>\r\n                    }\r\n                </ul>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst SignedInItem = ({data, onSignedOutBtn}) => (\r\n    <li className=\"signed-in-list-item\">\r\n        <p>{data.Date}</p>\r\n        <p>{data.Time}</p>\r\n        <p>{data.Name}</p>\r\n        {!data.pending? <Button smallBtn onClick={onSignedOutBtn}>Sign Out</Button> : <div className=\"small-loader\" />}\r\n    </li>\r\n)","import React from 'react';\r\nimport \"./assets/scss/shared.scss\"\r\nimport roboticsLogo from \"./assets/images/robotics_logo.svg\"\r\nimport RegisterBox from \"./components/registerBox\"\r\nimport SignInBox from \"./components/signInBox\"\r\nimport SignedInList from \"./components/signedInList\"\r\nimport {getAllSignedIn, getDateTime, signOut, signOutMultiple} from \"./components/gsheetsApi\"\r\n\r\n\r\nexport default class App extends React.Component {\r\n    constructor() {\r\n        super()\r\n\r\n        this.state = {currentlySignedIn: [], pendingSignIn:[], pendingSignOut: [], isOnline: window.navigator.onLine}\r\n\r\n        this.updateSignedIn = this.updateSignedIn.bind(this)\r\n        this.addNewLocalSignIn = this.addNewLocalSignIn.bind(this)\r\n        this.handleSignOut = this.handleSignOut.bind(this)\r\n        this.handleMultiSignOut = this.handleMultiSignOut.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        setTimeout(this.updateSignedIn, 500);\r\n\r\n        window.addEventListener('offline', () => this.onlineChangeHandler(false));\r\n        window.addEventListener('online', () => this.onlineChangeHandler(true));\r\n    }\r\n\r\n    onlineChangeHandler(isOnline) {\r\n        this.setState({isOnline: isOnline})\r\n    }\r\n\r\n    updateSignedIn() {\r\n        getAllSignedIn().then(currentlySignedIn => {\r\n            let pendingSignIn = []\r\n            let signedInIDs = currentlySignedIn.map(v => v.ID)\r\n\r\n            for (let {ID} of this.state.pendingSignIn) {\r\n                if (!signedInIDs.includes(ID)) {\r\n                    pendingSignIn.push(ID)\r\n                }\r\n            }\r\n\r\n            let pendingSignOut = []\r\n            for (let ID in this.state.pendingSignOut) {\r\n                if (signedInIDs.includes(ID)) {\r\n                    pendingSignOut.push(ID)\r\n                    let idx = signedInIDs.indexOf(ID)\r\n                    let member = currentlySignedIn[idx]\r\n                    currentlySignedIn[idx] = {...member, pending: true}\r\n                }\r\n            }\r\n            this.setState({currentlySignedIn, pendingSignIn, pendingSignOut})\r\n        })\r\n    }\r\n\r\n    addNewLocalSignIn(Name,  ID) {\r\n        let [Date, Time] = getDateTime()\r\n        this.setState({pendingSignIn: this.state.pendingSignIn.concat([{Name, Time, Date, ID, pending: true}])})\r\n    }\r\n\r\n    handleSignOut(ID) {\r\n        let currentlySignedIn = this.state.currentlySignedIn.map(v => {\r\n            if (v.ID === ID) {\r\n                return {...v, pending: true}\r\n            } else {\r\n                return v\r\n            }\r\n        })\r\n\r\n        this.setState({currentlySignedIn, pendingSignOut: this.state.pendingSignOut.concat(ID)})\r\n        signOut(ID).then(this.updateSignedIn)\r\n    }\r\n\r\n    handleMultiSignOut(IDs) {\r\n        let currentlySignedIn = this.state.currentlySignedIn.map(v => {\r\n            if (IDs.includes(v.ID)) {\r\n                return {...v, pending: true}\r\n            } else {\r\n                return v\r\n            }\r\n        })\r\n\r\n        this.setState({currentlySignedIn, pendingSignOut: this.state.pendingSignOut.concat(IDs)})\r\n        signOutMultiple(IDs).then(this.updateSignedIn)\r\n    }\r\n\r\n    render() {\r\n        if (this.state.isOnline) {\r\n            return (\r\n                <div className=\"col flex-center\">\r\n                    <div className=\"row\" id=\"header\">\r\n                        <h1 className=\"title\">Titan Robotics Hour Logging</h1>\r\n                        <img id=\"logo\" src={roboticsLogo} alt=\"<Robotics logo>\"/>\r\n                    </div>\r\n                    <div className=\"separator bold\">Sign In or Register</div>\r\n                    <SignInBox localSignInFunc={this.addNewLocalSignIn} updateFunc={this.updateSignedIn} signedIn={this.state.currentlySignedIn.concat(this.state.pendingSignIn)}/>\r\n                    <h2 className=\"no-bold\">or</h2>\r\n                    <RegisterBox />\r\n                    <SignedInList multiSignOut={this.handleMultiSignOut} signOut={this.handleSignOut} signedIn={this.state.currentlySignedIn.concat(this.state.pendingSignIn)} updateFunc={this.updateSignedIn} />\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <div className=\"col flex-center\">\r\n                    <h2 className=\"bold\">Waiting for internet connection...</h2>\r\n                    <div className=\"loader\"></div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals(() => {});\r\n"],"sourceRoot":""}