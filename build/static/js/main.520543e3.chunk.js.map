{"version":3,"sources":["assets/images/robotics_logo.svg","components/button.js","components/gsheetsApi.js","components/registerBox.js","components/signInBox.js","components/signedInList.js","App.js","reportWebVitals.js","index.js"],"names":["Button","onClick","children","smallBtn","onMouseUp","onMouseDown","className","doc","GoogleSpreadsheet","spreadsheet","ID","loaded","loader","a","useServiceAccountAuth","credentials","loadInfo","then","getSheet","sheetName","sheetsByTitle","getAllMembers","membersSheet","getRows","getAllSignedIn","signedInSheet","checkIfIdIsRegistered","id","rows","getName","row","setName","name","i","length","save","addRow","Name","getDateTime","isSignedIn","signedIn","date","time","Date","Time","outTime","signedInRow","hoursSheet","delete","signOutMultiple","ids","outTimes","undefined","map","Error","header","_sheet","headerValues","allIDs","v","newSignedOuts","removes","idx","indexOf","push","console","log","filter","includes","clear","setHeaderRow","addRows","datetime","toLocaleDateString","zeroPad","getHours","getMinutes","string","getTodaysDate","RegisterBox","state","nameValue","idValue","error","handleNameChange","bind","handleIdChange","handleClick","handleKeyPress","event","this","setState","target","value","key","blur","clearValues","registerMember","updated","type","placeholder","onChange","onKeyPress","React","Component","SignInBox","props","nameIdValue","autocompleteValue","currentMember","possibleMembers","memberData","showDropDown","success_txt","inputRef","createRef","handleTextChange","openDropDown","closeDropDown","handleSignInClick","handleDropDownItemClick","updateDropDown","text","member","reverse","lowerText","toLowerCase","format","fwd","rvs","cor","slice","noDelay","setTimeout","changeInputTextTo","signIn","localSignInFunc","updateFunc","newText","x","y","width","current","offsetLeft","offsetTop","scrollWidth","autoFocus","style","zIndex","spellCheck","ref","onBlur","transform","DropDown","data","onItemClick","tabIndex","SignedInList","lastMouseDown","handleMultiSignOutClick","setLastMouseDown","e","timeStamp","pending","multiSignOut","onSignedOutBtn","signOut","SignedInItem","App","currentlySignedIn","pendingSignIn","pendingSignOut","isOnline","window","navigator","onLine","updateSignedIn","addNewLocalSignIn","handleSignOut","handleMultiSignOut","checkIfSignedInTooLong","peopleToSignOut","concat","addEventListener","onlineChangeHandler","signedInIDs","notFirstRefresh","setInterval","IDs","src","roboticsLogo","alt","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.520543e3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/robotics_logo.264ccd8c.svg\";","import React from 'react'\r\n\r\nconst Button = ({onClick, children, smallBtn, onMouseUp, onMouseDown}) => (\r\n    <div className=\"btn-container\">\r\n        <button className={smallBtn? \"small-btn-primary\" : \"btn btn-primary\"} onClick={onClick} onMouseUp={onMouseUp} onMouseDown={onMouseDown}>{children}</button>\r\n    </div>\r\n)\r\n\r\nexport default Button;","import {GoogleSpreadsheet} from \"google-spreadsheet\"\r\nimport credentials from \"../assets/tokens/service_auth_token.json\"\r\nimport spreadsheet from \"../assets/tokens/spreadsheet.json\"\r\n\r\nconst doc = new GoogleSpreadsheet(spreadsheet.ID);\r\n\r\nvar loaded = false\r\n\r\nconst loader = (async () => {\r\n    await doc.useServiceAccountAuth(credentials)\r\n    await doc.loadInfo()\r\n})().then(() => loaded = true)\r\n\r\nexport async function checkIfLoggedInTooLong() {\r\n    const rows = await getAllSignedIn()\r\n    const peopleToSignOut = []\r\n    \r\n    for (let row of rows) {\r\n        if (new Date(row[\"Date\"]) < getTodaysDate()) {\r\n            peopleToSignOut.push(row[\"ID\"])\r\n        }\r\n    }\r\n    \r\n    if (peopleToSignOut.length > 0) {\r\n        await signOutMultiple(peopleToSignOut, peopleToSignOut.map(() => \"18:00\"))\r\n    }\r\n\r\n    console.log(\"Check logged in\", getDateTime(), peopleToSignOut, rows)\r\n}\r\n\r\nexport async function getSheet(sheetName) {\r\n    if (loaded) {\r\n        return doc.sheetsByTitle[sheetName]\r\n    } else {\r\n        await loader\r\n        return getSheet(sheetName)\r\n    }\r\n}\r\n\r\nexport async function getAllMembers() {\r\n    const membersSheet = await getSheet(\"Members\")\r\n    return await membersSheet.getRows()\r\n    \r\n}\r\n\r\nexport async function getAllSignedIn() {\r\n    const signedInSheet = await getSheet(\"Currently Signed In\")\r\n    return await signedInSheet.getRows()\r\n}\r\n\r\nexport async function checkIfIdIsRegistered(id) {\r\n    const rows = await getAllMembers()\r\n\r\n    for (const row of rows) {\r\n        if (row[\"ID\"] === id) {\r\n            return true\r\n        }\r\n    }\r\n\r\n    return false\r\n}\r\n\r\nexport async function getName(id) {\r\n    const rows = await getAllMembers()\r\n\r\n    for (const row of rows) {\r\n        if (row[\"ID\"] === id) {\r\n            return row[\"Name\"]\r\n        }\r\n    }\r\n    return null\r\n}\r\n\r\nexport async function setName(name, id) {\r\n    const rows = await getAllMembers()\r\n\r\n    for (let i = 0; i < rows.length; i++) {\r\n        if (rows[i][\"ID\"] === id) {\r\n            rows[i][\"Name\"] = name\r\n            await rows[i].save()\r\n            break\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport async function registerMember(name, id) {\r\n    const isRegistered = await checkIfIdIsRegistered(id)\r\n\r\n    if (isRegistered) {\r\n        const loggedName = await getName(id)\r\n\r\n        if (loggedName !== name) {\r\n            await setName(name, id)\r\n            return true\r\n        }\r\n    } else {\r\n        const membersSheet = doc.sheetsByTitle[\"Members\"]\r\n        await membersSheet.addRow({Name: name, ID: id, \"Date Added\": getDateTime()[0]})\r\n        return true\r\n    }\r\n    return false\r\n}\r\n\r\nexport async function isSignedIn(id) {\r\n    const signedIn = await getAllSignedIn()\r\n\r\n    for (let row of signedIn) {\r\n        if (row[\"ID\"] === id) {\r\n            return true\r\n        }\r\n    }\r\n\r\n    return false\r\n}\r\n\r\nexport async function signIn(id) {\r\n    const isRegistered = await checkIfIdIsRegistered(id)\r\n\r\n    if (isRegistered) {\r\n        if (await isSignedIn(id)) {\r\n            return true\r\n        } else {\r\n            const signedInSheet = doc.sheetsByTitle[\"Currently Signed In\"]\r\n            const [date, time] = getDateTime()\r\n            await signedInSheet.addRow({Date: date, Time: time, Name: await getName(id), ID: id})\r\n            return true\r\n        }\r\n    } else {\r\n        return false\r\n    }\r\n}\r\n\r\n/** \r\n * uses tons of API calls, use signOutMultiple instead for signing out more than one person at a time\r\n */\r\nexport async function signOut(id, outTime) {\r\n    outTime = outTime ? outTime : getDateTime()[1]\r\n\r\n    let signedIn = await getAllSignedIn()\r\n\r\n    for (let signedInRow of signedIn) {\r\n        if (signedInRow.ID === id) {\r\n            let hoursSheet = await getSheet(\"Hours\")\r\n            await hoursSheet.addRow({Date: signedInRow.Date, Name: await getName(id), ID: id, \"Time In\": signedInRow.Time, \"Time Out\": outTime})\r\n            await signedInRow.delete()\r\n            return true\r\n        }\r\n    }\r\n    return false\r\n}\r\n\r\nexport async function signOutMultiple(ids, outTimes) {\r\n    if (outTimes === undefined) {\r\n        outTimes = ids.map(() => getDateTime()[1])\r\n    } else if (ids.length !== outTimes.length) {\r\n        throw new Error(\"`OutTimes` needs to be the same length as `ids`\")\r\n    }\r\n    let signedInSheet = await getSheet(\"Currently Signed In\")\r\n    let signedIn = await signedInSheet.getRows()\r\n\r\n    let header = signedIn[0]._sheet.headerValues\r\n    let allIDs = signedIn.map(v => v.ID)\r\n    let newSignedOuts = []\r\n    \r\n    let removes = []\r\n    for (let [id, outTime] of ids.map((v, i) => [v, outTimes[i]])) {\r\n        let idx = allIDs.indexOf(id) \r\n        if (idx !== -1) {\r\n            let row = signedIn[idx]\r\n            removes.push(idx)\r\n            newSignedOuts.push({Date: row.Date, Name: await getName(id), ID: id, \"Time In\": row.Time, \"Time Out\": outTime})\r\n\r\n        } else {\r\n            console.log(\"Not signed in!\", id)\r\n        }\r\n    }\r\n\r\n    signedIn = signedIn.filter((v, i) => !removes.includes(i))\r\n\r\n    await signedInSheet.clear()\r\n    await signedInSheet.setHeaderRow(header)\r\n    \r\n    if (signedIn.length > 0) {\r\n        await signedInSheet.addRows(signedIn)\r\n    }\r\n\r\n    let hoursSheet = await getSheet(\"Hours\")\r\n    await hoursSheet.addRows(newSignedOuts)\r\n\r\n}\r\n\r\nexport function getDateTime() {\r\n    const datetime = new Date()\r\n\r\n    // Needs to pass in the locale, otherwise the format isn't consistent\r\n    return [datetime.toLocaleDateString('en-US'), `${zeroPad(datetime.getHours())}:${zeroPad(datetime.getMinutes())}`]\r\n}\r\n\r\nfunction zeroPad(string) {\r\n    return (\"\" + string).length === 1? \"0\" + string : string\r\n}\r\n\r\nexport function getTodaysDate() {\r\n    // Needs to pass in the locale, otherwise the format isn't consistent\r\n    return new Date(new Date().toLocaleDateString('en-US'))\r\n}\r\n","import React from 'react'\r\nimport \"./../assets/scss/shared.scss\"\r\nimport Button from \"./button\"\r\nimport {registerMember} from \"./gsheetsApi\"\r\n\r\nexport default class RegisterBox extends React.Component {\r\n    constructor() {\r\n        super()\r\n\r\n        this.state = {nameValue: \"\", idValue: \"\", error: \"\"}\r\n\r\n        this.handleNameChange = this.handleNameChange.bind(this)\r\n        this.handleIdChange = this.handleIdChange.bind(this)\r\n        this.handleClick = this.handleClick.bind(this)\r\n        this.handleKeyPress = this.handleKeyPress.bind(this)\r\n    }\r\n\r\n    handleNameChange(event) {\r\n        this.setState({nameValue: event.target.value})\r\n    }\r\n    \r\n    handleIdChange(event) {\r\n        this.setState({idValue: event.target.value})\r\n    }\r\n\r\n    handleKeyPress(event) {\r\n        if (event.key === \"Enter\") {\r\n            this.handleClick()\r\n            event.target.blur()\r\n        }\r\n    }\r\n\r\n    handleClick() {\r\n        if (this.state.nameValue === \"\" || this.state.idValue === \"\") {\r\n            this.setState({error: \"Invalid input\"})\r\n        } else {\r\n            this.setState({error: \"\"})\r\n            this.clearValues()\r\n            registerMember(this.state.nameValue, this.state.idValue).then(updated => updated ? null : this.setState({error: \"Duplicate Member Entry\"}))\r\n        }\r\n    }\r\n\r\n    clearValues() {\r\n        this.setState({nameValue: \"\", idValue: \"\"})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className=\"row row-input\">\r\n                    <input type=\"text\" placeholder=\"Name\" value={this.state.nameValue} onChange={this.handleNameChange} onKeyPress={this.handleKeyPress}/>\r\n                    <input type=\"number\" placeholder=\"School ID\" value={this.state.idValue} onChange={this.handleIdChange} onKeyPress={this.handleKeyPress}/>\r\n                    <Button onClick={this.handleClick}>Register</Button>\r\n                </div>\r\n                {this.state.error ? <h3 className=\"error\">Error: {this.state.error}</h3> : \"\"}\r\n            </>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport \"./../assets/scss/shared.scss\"\r\nimport Button from \"./button\"\r\nimport {getAllMembers, signIn} from \"./gsheetsApi\"\r\n\r\nexport default class SignInBox extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {nameIdValue: \"\", autocompleteValue: \"\", currentMember: null, possibleMembers: [], memberData: [], showDropDown: false, error: \"\", success_txt: \"\"}\r\n\r\n        this.inputRef = React.createRef();\r\n        this.handleTextChange = this.handleTextChange.bind(this)\r\n        this.openDropDown = this.openDropDown.bind(this)\r\n        this.closeDropDown = this.closeDropDown.bind(this)\r\n        this.handleSignInClick = this.handleSignInClick.bind(this)\r\n        this.handleDropDownItemClick = this.handleDropDownItemClick.bind(this)\r\n        this.handleKeyPress = this.handleKeyPress.bind(this)\r\n\r\n        getAllMembers().then(memberData => {this.setState({memberData});this.updateDropDown(this.state.nameIdValue)})\r\n    }\r\n\r\n    handleTextChange(event) {\r\n        let text = event.target.value\r\n        this.setState({nameIdValue: text})\r\n        this.updateDropDown(text)\r\n\r\n        if (text === \"\") {  // if input is blank, clear error message (if it exists)\r\n            this.setState({error: \"\"})\r\n            this.closeDropDown(true)\r\n        } else {\r\n            this.openDropDown()\r\n        }\r\n\r\n        if (this.state.success_txt) {\r\n            this.setState({success_txt: \"\"})\r\n        }\r\n    }\r\n\r\n    format(member, reverse=false) {\r\n        if (!reverse) {\r\n            return `${member.Name} | ${member.ID}`\r\n        } else {\r\n            return `${member.ID} | ${member.Name}`\r\n        }\r\n    }\r\n\r\n    updateDropDown(text) {\r\n        if (text === \"\") {\r\n            this.setState({possibleMembers: this.state.memberData, currentMember: null, autocompleteValue: \"\"})\r\n        } else {\r\n            let lowerText = text.toLowerCase()\r\n            let possibleMembers = []\r\n            let autocompleteValue =  \"\"\r\n            let currentMember = null\r\n\r\n            for (let member of this.state.memberData) {\r\n                let [fwd, rvs] = [this.format(member), this.format(member, true)]\r\n                let cor = \"\"\r\n\r\n                if (lowerText.length <= fwd.length) {\r\n                    if (lowerText === fwd.slice(0, lowerText.length).toLowerCase()) {\r\n                        possibleMembers.push(member)\r\n                        cor = fwd\r\n                        \r\n                    } else if (lowerText === rvs.slice(0, lowerText.length).toLowerCase()) {\r\n                        possibleMembers.push(member)\r\n                        cor = rvs\r\n                    }\r\n\r\n                    if (possibleMembers.length === 1 && cor) {\r\n                        autocompleteValue = text + cor.slice(text.length)\r\n                        currentMember = member\r\n                    }\r\n                } \r\n            }\r\n\r\n            this.setState({possibleMembers, currentMember, autocompleteValue})\r\n        }\r\n    }\r\n\r\n    openDropDown() {\r\n        this.setState({showDropDown: true})\r\n        getAllMembers().then(memberData => {this.setState({memberData});this.updateDropDown(this.state.nameIdValue)})\r\n    }\r\n\r\n    closeDropDown(noDelay=false) {\r\n        if (noDelay) {\r\n            this.setState({showDropDown: false})\r\n        } else {\r\n            // delay so that when someone clicks on the drop down menu it doesn't immediately close\r\n            // instead, it can now process their input\r\n            setTimeout(() => this.setState({showDropDown: false}), 400)\r\n        }\r\n    }\r\n\r\n    handleSignInClick() {\r\n        this.closeDropDown()\r\n        if (this.state.currentMember && this.props.signedIn.map(v => v.ID).includes(this.state.currentMember.ID)) {\r\n            this.changeInputTextTo(\"\")\r\n            this.setState({success_txt: `Already Signed In: ${this.state.currentMember.Name}`})\r\n        } else if (this.state.currentMember) {\r\n            let member = this.state.currentMember\r\n\r\n            signIn(member.ID)\r\n            this.props.localSignInFunc(member.Name, member.ID)\r\n            this.changeInputTextTo(\"\")\r\n            this.setState({success_txt: `Sign in Successful: ${member.Name}`})\r\n            setTimeout(this.props.updateFunc, 3000)\r\n        } else if (this.state.nameIdValue !== \"\") {\r\n            this.setState({error: \"Unknown Member\"})\r\n        }\r\n    }\r\n\r\n    handleDropDownItemClick(memberData) {\r\n        this.changeInputTextTo(this.format(memberData))\r\n        setTimeout(this.handleSignInClick, 500)  // delay to allow state to update\r\n    }\r\n\r\n    handleKeyPress(event) {\r\n        if (event.key === \"Enter\") {\r\n            if (this.state.currentMember) {\r\n                this.changeInputTextTo(this.format(this.state.currentMember))\r\n            }\r\n            this.handleSignInClick()\r\n        }\r\n    }\r\n\r\n    changeInputTextTo(newText) {\r\n        this.handleTextChange({target: {value: newText}})\r\n    }\r\n\r\n    render() {\r\n        var [x, y, width] = [-10000, -10000, 0]\r\n        if (this.inputRef.current !== null) {\r\n            x = this.inputRef.current.offsetLeft\r\n            y = this.inputRef.current.offsetTop\r\n            width = this.inputRef.current.scrollWidth\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <div className=\"row row-input pos-relative\">\r\n                    <input type=\"text\" placeholder=\"Name or ID\" autoFocus=\"autofocus\" style={{zIndex: 100, width: \"40vw\"}} spellCheck=\"false\" value={this.state.nameIdValue} onChange={this.handleTextChange} ref={this.inputRef} onBlur={() => {this.closeDropDown()}} onKeyPress={this.handleKeyPress} />\r\n                    <Button onClick={this.handleSignInClick}>Sign In</Button>\r\n                    {this.state.showDropDown ? \r\n                        <div className=\"drop-down\" style={{transform: `translate(${x}px, ${y}px)`, width: `${width}px`}}>\r\n                            <p className=\"autocomplete\">{this.state.autocompleteValue}</p>\r\n                            <DropDown data={this.state.possibleMembers} onItemClick={this.handleDropDownItemClick} format={this.format}/>\r\n                        </div> :\r\n                        \"\"}\r\n                </div>\r\n                {this.state.error ? <h3 className=\"error\">Error: {this.state.error}</h3> : \"\"}\r\n                {this.state.success_txt ? <h3 className=\"success\">{this.state.success_txt}</h3> : \"\"}\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nfunction DropDown ({data, onItemClick, format}) {\r\n    if (data.length > 0) {\r\n        return (\r\n            <ul className=\"drop-down-box\" tabIndex=\"0\">\r\n                {data.map((member, i) => <li key={i}><p onClick={() => onItemClick(member)}>{format(member)}</p></li>)}\r\n            </ul>\r\n        )\r\n    } else {\r\n        return \"\"\r\n    }\r\n\r\n}","import React from 'react'\r\nimport \"./../assets/scss/shared.scss\"\r\nimport Button from \"./button\"\r\nimport {signOut} from \"./gsheetsApi\"\r\n\r\nexport default class SignedInList extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.lastMouseDown = null\r\n        this.state = {}\r\n\r\n        this.handleMultiSignOutClick = this.handleMultiSignOutClick.bind(this)\r\n        this.setLastMouseDown = this.setLastMouseDown.bind(this)\r\n    }\r\n\r\n    handleMultiSignOutClick(e) {\r\n        if (e.timeStamp - this.lastMouseDown > 500) {\r\n            if (this.props.signedIn.filter(v => !v.pending).length > 0) {\r\n                this.props.multiSignOut(this.props.signedIn.filter(v => !v.pending).map(v => v.ID))\r\n            } else {\r\n                console.log(\"no one is logged in\")\r\n            }\r\n        } else {\r\n            console.log(\"NO\")\r\n        }\r\n    }\r\n\r\n    setLastMouseDown(e) {\r\n        this.lastMouseDown = e.timeStamp\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className=\"separator bold\">{this.props.signedIn.length} Currently Signed In</div>\r\n                <ul className=\"series\">\r\n                    <li className=\"bold signed-in-list-item\">\r\n                        <h2>Date</h2>\r\n                        <h2>Time In</h2>\r\n                        <h2>Name</h2>\r\n                        <Button smallBtn onMouseUp={this.handleMultiSignOutClick} onMouseDown={this.setLastMouseDown}>Sign Out All</Button>\r\n                    </li>\r\n                    {\r\n                        this.props.signedIn.length > 0? \r\n                        this.props.signedIn.map(log => <SignedInItem data={log} onSignedOutBtn={() => this.props.signOut(log.ID)} key={log.Name}/>) : \r\n                            <li className=\"flex-center\"><h3>No one is signed in</h3></li>\r\n                    }\r\n                </ul>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst SignedInItem = ({data, onSignedOutBtn}) => (\r\n    <li className=\"signed-in-list-item\">\r\n        <p>{data.Date}</p>\r\n        <p>{data.Time}</p>\r\n        <p>{data.Name}</p>\r\n        {!data.pending? <Button smallBtn onClick={onSignedOutBtn}>Sign Out</Button> : <div className=\"small-loader\" />}\r\n    </li>\r\n)","import React from 'react';\r\nimport \"./assets/scss/shared.scss\"\r\nimport roboticsLogo from \"./assets/images/robotics_logo.svg\"\r\nimport RegisterBox from \"./components/registerBox\"\r\nimport SignInBox from \"./components/signInBox\"\r\nimport SignedInList from \"./components/signedInList\"\r\nimport {getAllSignedIn, getDateTime, signOut, signOutMultiple, getTodaysDate} from \"./components/gsheetsApi\"\r\n\r\n\r\nexport default class App extends React.Component {\r\n    constructor() {\r\n        super()\r\n\r\n        this.state = {currentlySignedIn: [], pendingSignIn:[], pendingSignOut: [], isOnline: window.navigator.onLine}\r\n\r\n        this.updateSignedIn = this.updateSignedIn.bind(this)\r\n        this.addNewLocalSignIn = this.addNewLocalSignIn.bind(this)\r\n        this.handleSignOut = this.handleSignOut.bind(this)\r\n        this.handleMultiSignOut = this.handleMultiSignOut.bind(this)\r\n        this.checkIfSignedInTooLong = this.checkIfSignedInTooLong.bind(this)\r\n    }\r\n\r\n    async checkIfSignedInTooLong() {\r\n        const peopleToSignOut = []\r\n        \r\n        for (let row of this.state.currentlySignedIn) {\r\n            if (new Date(row[\"Date\"]) < getTodaysDate()) {\r\n                peopleToSignOut.push(row[\"ID\"])\r\n            }\r\n        }\r\n        \r\n        if (peopleToSignOut.length > 0) {\r\n            await signOutMultiple(peopleToSignOut, peopleToSignOut.map(() => \"18:00\"))\r\n        \r\n            let currentlySignedIn = this.state.currentlySignedIn.map(v => {\r\n                if (peopleToSignOut.includes(v.ID)) {\r\n                    return {...v, pending: true}\r\n                } else {\r\n                    return v\r\n                }\r\n            })\r\n        \r\n            let pendingSignOut = this.state.pendingSignOut.concat(peopleToSignOut)\r\n    \r\n            this.setState({pendingSignOut, currentlySignedIn})\r\n            setTimeout(this.updateSignedIn, 3000)\r\n        }\r\n        \r\n        console.log(\"Check logged in\", getDateTime(), peopleToSignOut, this.state.currentlySignedIn)\r\n    }\r\n\r\n    componentDidMount() {\r\n        setTimeout(this.updateSignedIn, 500);\r\n\r\n        window.addEventListener('offline', () => this.onlineChangeHandler(false));\r\n        window.addEventListener('online', () => this.onlineChangeHandler(true));\r\n    }\r\n\r\n    onlineChangeHandler(isOnline) {\r\n        this.setState({isOnline: isOnline})\r\n    }\r\n\r\n    updateSignedIn() {\r\n        getAllSignedIn().then(currentlySignedIn => {\r\n            let pendingSignIn = []\r\n            let signedInIDs = currentlySignedIn.map(v => v.ID)\r\n            \r\n            for (let {ID} of this.state.pendingSignIn) {\r\n                if (!signedInIDs.includes(ID)) {\r\n                    pendingSignIn.push(ID)\r\n                }\r\n            }\r\n            \r\n            let pendingSignOut = []\r\n            for (let ID in this.state.pendingSignOut) {\r\n                if (signedInIDs.includes(ID)) {\r\n                    pendingSignOut.push(ID)\r\n                    let idx = signedInIDs.indexOf(ID)\r\n                    let member = currentlySignedIn[idx]\r\n                    currentlySignedIn[idx] = {...member, pending: true}\r\n                }\r\n            }\r\n            \r\n            this.setState({currentlySignedIn, pendingSignIn, pendingSignOut}, () => {\r\n                if (!this.notFirstRefresh) {\r\n                    this.checkIfSignedInTooLong()\r\n                    setInterval(this.checkIfSignedInTooLong, 3600000) // repeats every hour\r\n                }\r\n            })\r\n\r\n            this.notFirstRefresh = true\r\n        })\r\n    }\r\n\r\n    addNewLocalSignIn(Name,  ID) {\r\n        let [Date, Time] = getDateTime()\r\n        this.setState({pendingSignIn: this.state.pendingSignIn.concat([{Name, Time, Date, ID, pending: true}])})\r\n    }\r\n\r\n    handleSignOut(ID) {\r\n        let currentlySignedIn = this.state.currentlySignedIn.map(v => {\r\n            if (v.ID === ID) {\r\n                return {...v, pending: true}\r\n            } else {\r\n                return v\r\n            }\r\n        })\r\n\r\n        this.setState({currentlySignedIn, pendingSignOut: this.state.pendingSignOut.concat(ID)})\r\n        signOut(ID).then(this.updateSignedIn)\r\n    }\r\n\r\n    handleMultiSignOut(IDs) {\r\n        let currentlySignedIn = this.state.currentlySignedIn.map(v => {\r\n            if (IDs.includes(v.ID)) {\r\n                return {...v, pending: true}\r\n            } else {\r\n                return v\r\n            }\r\n        })\r\n\r\n        this.setState({currentlySignedIn, pendingSignOut: this.state.pendingSignOut.concat(IDs)})\r\n        signOutMultiple(IDs).then(this.updateSignedIn)\r\n    }\r\n\r\n    render() {\r\n        if (this.state.isOnline) {\r\n            return (\r\n                <div className=\"col flex-center\">\r\n                    <div className=\"row\" id=\"header\">\r\n                        <h1 className=\"title\">Titan Robotics Hour Logging</h1>\r\n                        <img id=\"logo\" src={roboticsLogo} alt=\"<Robotics logo>\"/>\r\n                    </div>\r\n                    <div className=\"separator bold\">Sign In or Register</div>\r\n                    <SignInBox localSignInFunc={this.addNewLocalSignIn} updateFunc={this.updateSignedIn} signedIn={this.state.currentlySignedIn.concat(this.state.pendingSignIn)}/>\r\n                    <h2 className=\"no-bold\">or</h2>\r\n                    <RegisterBox />\r\n                    <SignedInList multiSignOut={this.handleMultiSignOut} signOut={this.handleSignOut} signedIn={this.state.currentlySignedIn.concat(this.state.pendingSignIn)} updateFunc={this.updateSignedIn} />\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <div className=\"col flex-center\">\r\n                    <h2 className=\"bold\">Waiting for internet connection...</h2>\r\n                    <div className=\"loader\"></div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals(() => {});\r\n"],"sourceRoot":""}