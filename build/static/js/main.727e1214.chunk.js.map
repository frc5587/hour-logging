{"version":3,"sources":["assets/images/robotics_logo.svg","components/button.js","components/gsheetsApi.js","components/registerBox.js","components/signInBox.js","components/signedInList.js","App.js","reportWebVitals.js","index.js"],"names":["Button","onClick","children","smallBtn","className","doc","GoogleSpreadsheet","loaded","loader","a","useServiceAccountAuth","credentials","loadInfo","checkIfLoggedInTooLong","setInterval","then","getAllSignedIn","rows","peopleToSignOut","row","Date","getTodaysDate","push","id","signOut","getSheet","sheetName","sheetsByTitle","getAllMembers","membersSheet","getRows","signedInSheet","checkIfIdIsRegistered","getName","setName","name","i","length","save","addRow","Name","ID","getDateTime","isSignedIn","signedIn","date","time","Time","outTime","signedInRow","hoursSheet","delete","datetime","toLocaleDateString","zeroPad","getHours","getMinutes","string","RegisterBox","state","nameValue","idValue","error","handleNameChange","bind","handleIdChange","handleClick","handleKeyPress","event","this","setState","target","value","key","blur","clearValues","registerMember","updated","type","placeholder","onChange","onKeyPress","React","Component","SignInBox","props","nameIdValue","autocompleteValue","currentMember","possibleMembers","memberData","showDropDown","success_txt","inputRef","createRef","handleTextChange","openDropDown","closeDropDown","handleSignInClick","handleDropDownItemClick","updateDropDown","text","member","reverse","lowerText","toLowerCase","format","fwd","rvs","cor","slice","noDelay","setTimeout","signIn","changeInputTextTo","updateFunc","newText","x","y","width","current","offsetLeft","offsetTop","scrollWidth","autoFocus","style","zIndex","spellCheck","ref","onBlur","transform","DropDown","data","onItemClick","tabIndex","map","SignedInList","pendingOut","console","log","splice","indexOf","onSignedOutBtn","pendingOutList","SignedInItem","includes","App","currentlySignedIn","isOnline","window","navigator","onLine","updateSignedIn","addEventListener","onlineChangeHandler","src","roboticsLogo","alt","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.727e1214.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/robotics_logo.264ccd8c.svg\";","import React from 'react'\r\n\r\nconst Button = ({onClick, children, smallBtn}) => (\r\n    <div className=\"btn-container\">\r\n        <button className={smallBtn? \"small-btn-primary\" : \"btn btn-primary\"} onClick={onClick}>{children}</button>\r\n    </div>\r\n)\r\n\r\nexport default Button;","import {GoogleSpreadsheet} from \"google-spreadsheet\"\r\nimport credentials from \"../assets/tokens/service_auth_token.json\"\r\n\r\nconst DOC_ID = '1Yvt_H-IMjBmQDAQPqMY9TJzSgFruGOBLCZbbppt72dk'\r\nconst doc = new GoogleSpreadsheet(DOC_ID);\r\n\r\nvar loaded = false\r\n\r\nconst loader = (async () => {\r\n    await doc.useServiceAccountAuth(credentials)\r\n    await doc.loadInfo()\r\n\r\n    checkIfLoggedInTooLong()\r\n    setInterval(checkIfLoggedInTooLong, 3600000) // repeats every hour\r\n})().then(() => loaded = true)\r\n\r\nexport async function checkIfLoggedInTooLong() {\r\n    const rows = await getAllSignedIn()\r\n    const peopleToSignOut = []\r\n\r\n    for (let row of rows) {\r\n        if (new Date(row[\"Date\"]) < getTodaysDate()) {\r\n            peopleToSignOut.push(row[\"ID\"])\r\n        }\r\n    }\r\n\r\n    for (let id of peopleToSignOut) {\r\n        await signOut(id, \"18:00\")  // signs people out at 6:00 pm\r\n    }\r\n}\r\n\r\nexport async function getSheet(sheetName) {\r\n    if (loaded) {\r\n        return doc.sheetsByTitle[sheetName]\r\n    } else {\r\n        await loader\r\n        return getSheet(sheetName)\r\n    }\r\n}\r\n\r\nexport async function getAllMembers() {\r\n    const membersSheet = await getSheet(\"Members\")\r\n    return await membersSheet.getRows()\r\n    \r\n}\r\n\r\nexport async function getAllSignedIn() {\r\n    const signedInSheet = await getSheet(\"Currently Signed In\")\r\n    return await signedInSheet.getRows()\r\n}\r\n\r\nexport async function checkIfIdIsRegistered(id) {\r\n    const rows = await getAllMembers()\r\n\r\n    for (const row of rows) {\r\n        if (row[\"ID\"] === id) {\r\n            return true\r\n        }\r\n    }\r\n\r\n    return false\r\n}\r\n\r\nexport async function getName(id) {\r\n    const rows = await getAllMembers()\r\n\r\n    for (const row of rows) {\r\n        if (row[\"ID\"] === id) {\r\n            return row[\"Name\"]\r\n        }\r\n    }\r\n    return null\r\n}\r\n\r\nexport async function setName(name, id) {\r\n    const rows = await getAllMembers()\r\n\r\n    for (let i = 0; i < rows.length; i++) {\r\n        if (rows[i][\"ID\"] === id) {\r\n            rows[i][\"Name\"] = name\r\n            await rows[i].save()\r\n            break\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport async function registerMember(name, id) {\r\n    const isRegistered = await checkIfIdIsRegistered(id)\r\n\r\n    if (isRegistered) {\r\n        const loggedName = await getName(id)\r\n\r\n        if (loggedName !== name) {\r\n            await setName(name, id)\r\n            return true\r\n        }\r\n    } else {\r\n        const membersSheet = doc.sheetsByTitle[\"Members\"]\r\n        await membersSheet.addRow({Name: name, ID: id, \"Date Added\": getDateTime()[0]})\r\n        return true\r\n    }\r\n    return false\r\n}\r\n\r\nexport async function isSignedIn(id) {\r\n    const signedIn = await getAllSignedIn()\r\n\r\n    for (let row of signedIn) {\r\n        if (row[\"ID\"] === id) {\r\n            return true\r\n        }\r\n    }\r\n\r\n    return false\r\n}\r\n\r\nexport async function signIn(id) {\r\n    const isRegistered = await checkIfIdIsRegistered(id)\r\n\r\n    if (isRegistered) {\r\n        if (await isSignedIn(id)) {\r\n            return true\r\n        } else {\r\n            const signedInSheet = doc.sheetsByTitle[\"Currently Signed In\"]\r\n            const [date, time] = getDateTime()\r\n            await signedInSheet.addRow({Date: date, Time: time, Name: await getName(id), ID: id})\r\n            return true\r\n        }\r\n    } else {\r\n        return false\r\n    }\r\n}\r\n\r\nexport async function signOut(id, outTime) {\r\n    outTime = outTime ? outTime : getDateTime()[1]\r\n\r\n    let signedIn = await getAllSignedIn()\r\n\r\n    for (let signedInRow of signedIn) {\r\n        if (signedInRow.ID === id) {\r\n            let hoursSheet = await getSheet(\"Hours\")\r\n            await hoursSheet.addRow({Date: signedInRow.Date, Name: await getName(id), ID: id, \"Time In\": signedInRow.Time, \"Time Out\": outTime})\r\n            await signedInRow.delete()\r\n            return true\r\n        }\r\n    }\r\n    return false\r\n}\r\n\r\nfunction getDateTime() {\r\n    const datetime = new Date()\r\n\r\n    return [datetime.toLocaleDateString(), `${zeroPad(datetime.getHours())}:${zeroPad(datetime.getMinutes())}`]\r\n}\r\n\r\nfunction zeroPad(string) {\r\n    return (\"\" + string).length === 1? \"0\" + string : string\r\n}\r\n\r\nfunction getTodaysDate() {\r\n    return new Date(new Date().toLocaleDateString())\r\n}\r\n","import React from 'react'\r\nimport \"./../assets/scss/shared.scss\"\r\nimport Button from \"./button\"\r\nimport {registerMember} from \"./gsheetsApi\"\r\n\r\nexport default class RegisterBox extends React.Component {\r\n    constructor() {\r\n        super()\r\n\r\n        this.state = {nameValue: \"\", idValue: \"\", error: \"\"}\r\n\r\n        this.handleNameChange = this.handleNameChange.bind(this)\r\n        this.handleIdChange = this.handleIdChange.bind(this)\r\n        this.handleClick = this.handleClick.bind(this)\r\n        this.handleKeyPress = this.handleKeyPress.bind(this)\r\n    }\r\n\r\n    handleNameChange(event) {\r\n        this.setState({nameValue: event.target.value})\r\n    }\r\n    \r\n    handleIdChange(event) {\r\n        this.setState({idValue: event.target.value})\r\n    }\r\n\r\n    handleKeyPress(event) {\r\n        if (event.key === \"Enter\") {\r\n            this.handleClick()\r\n            event.target.blur()\r\n        }\r\n    }\r\n\r\n    handleClick() {\r\n        if (this.state.nameValue === \"\" || this.state.idValue === \"\") {\r\n            this.setState({error: \"Invalid input\"})\r\n        } else {\r\n            this.setState({error: \"\"})\r\n            this.clearValues()\r\n            registerMember(this.state.nameValue, this.state.idValue).then(updated => updated ? null : this.setState({error: \"Duplicate Member Entry\"}))\r\n        }\r\n    }\r\n\r\n    clearValues() {\r\n        this.setState({nameValue: \"\", idValue: \"\"})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className=\"row row-input\">\r\n                    <input type=\"text\" placeholder=\"Name\" value={this.state.nameValue} onChange={this.handleNameChange} onKeyPress={this.handleKeyPress}/>\r\n                    <input type=\"number\" placeholder=\"School ID\" value={this.state.idValue} onChange={this.handleIdChange} onKeyPress={this.handleKeyPress}/>\r\n                    <Button onClick={this.handleClick}>Register</Button>\r\n                </div>\r\n                {this.state.error ? <h3 className=\"error\">Error: {this.state.error}</h3> : \"\"}\r\n            </>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport \"./../assets/scss/shared.scss\"\r\nimport Button from \"./button\"\r\nimport {getAllMembers, signIn} from \"./gsheetsApi\"\r\n\r\nexport default class SignInBox extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {nameIdValue: \"\", autocompleteValue: \"\", currentMember: null, possibleMembers: [], memberData: [], showDropDown: false, error: \"\", success_txt: \"\"}\r\n\r\n        this.inputRef = React.createRef();\r\n        this.handleTextChange = this.handleTextChange.bind(this)\r\n        this.openDropDown = this.openDropDown.bind(this)\r\n        this.closeDropDown = this.closeDropDown.bind(this)\r\n        this.handleSignInClick = this.handleSignInClick.bind(this)\r\n        this.handleDropDownItemClick = this.handleDropDownItemClick.bind(this)\r\n        this.handleKeyPress = this.handleKeyPress.bind(this)\r\n\r\n        getAllMembers().then(memberData => {this.setState({memberData});this.updateDropDown(this.state.nameIdValue)})\r\n    }\r\n\r\n    handleTextChange(event) {\r\n        let text = event.target.value\r\n        this.setState({nameIdValue: text})\r\n        this.updateDropDown(text)\r\n\r\n        if (text === \"\") {  // if input is blank, clear error message (if it exists)\r\n            this.setState({error: \"\"})\r\n            this.closeDropDown(true)\r\n        } else {\r\n            this.openDropDown()\r\n        }\r\n\r\n        if (this.state.success_txt) {\r\n            this.setState({success_txt: \"\"})\r\n        }\r\n    }\r\n\r\n    format(member, reverse=false) {\r\n        if (!reverse) {\r\n            return `${member.Name} | ${member.ID}`\r\n        } else {\r\n            return `${member.ID} | ${member.Name}`\r\n        }\r\n    }\r\n\r\n    updateDropDown(text) {\r\n        if (text === \"\") {\r\n            this.setState({possibleMembers: this.state.memberData, currentMember: null, autocompleteValue: \"\"})\r\n        } else {\r\n            let lowerText = text.toLowerCase()\r\n            let possibleMembers = []\r\n            let autocompleteValue =  \"\"\r\n            let currentMember = null\r\n\r\n            for (let member of this.state.memberData) {\r\n                let [fwd, rvs] = [this.format(member), this.format(member, true)]\r\n                let cor = \"\"\r\n\r\n                if (lowerText.length <= fwd.length) {\r\n                    if (lowerText === fwd.slice(0, lowerText.length).toLowerCase()) {\r\n                        possibleMembers.push(member)\r\n                        cor = fwd\r\n                        \r\n                    } else if (lowerText === rvs.slice(0, lowerText.length).toLowerCase()) {\r\n                        possibleMembers.push(member)\r\n                        cor = rvs\r\n                    }\r\n\r\n                    if (possibleMembers.length === 1 && cor) {\r\n                        autocompleteValue = text + cor.slice(text.length)\r\n                        currentMember = member\r\n                    }\r\n                } \r\n            }\r\n\r\n            this.setState({possibleMembers, currentMember, autocompleteValue})\r\n        }\r\n    }\r\n\r\n    openDropDown() {\r\n        this.setState({showDropDown: true})\r\n        getAllMembers().then(memberData => {this.setState({memberData});this.updateDropDown(this.state.nameIdValue)})\r\n    }\r\n\r\n    closeDropDown(noDelay=false) {\r\n        if (noDelay) {\r\n            this.setState({showDropDown: false})\r\n        } else {\r\n            // delay so that when someone clicks on the drop down menu it doesn't immediately close\r\n            // instead, it can now process their input\r\n            setTimeout(() => this.setState({showDropDown: false}), 400)\r\n        }\r\n    }\r\n\r\n    handleSignInClick() {\r\n        this.closeDropDown()\r\n        if (this.state.currentMember) {\r\n            let member = this.state.currentMember\r\n\r\n            signIn(member.ID)\r\n            this.changeInputTextTo(\"\")\r\n            this.setState({success_txt: `Log in Successful: ${member.Name}`})\r\n            setTimeout(this.props.updateFunc, 3000)\r\n        } else if (this.state.nameIdValue !== \"\") {\r\n            this.setState({error: \"Unknown Member\"})\r\n        }\r\n    }\r\n\r\n    handleDropDownItemClick(memberData) {\r\n        this.changeInputTextTo(this.format(memberData))\r\n        setTimeout(this.handleSignInClick, 500)  // delay to allow state to update\r\n    }\r\n\r\n    handleKeyPress(event) {\r\n        if (event.key === \"Enter\") {\r\n            if (this.state.currentMember) {\r\n                this.changeInputTextTo(this.format(this.state.currentMember))\r\n            }\r\n            this.handleSignInClick()\r\n        }\r\n    }\r\n\r\n    changeInputTextTo(newText) {\r\n        this.handleTextChange({target: {value: newText}})\r\n    }\r\n\r\n    render() {\r\n        var [x, y, width] = [-10000, -10000, 0]\r\n        if (this.inputRef.current !== null) {\r\n            x = this.inputRef.current.offsetLeft\r\n            y = this.inputRef.current.offsetTop\r\n            width = this.inputRef.current.scrollWidth\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <div className=\"row row-input pos-relative\">\r\n                    <input type=\"text\" placeholder=\"Name or ID\" autoFocus=\"autofocus\" style={{zIndex: 100, width: \"40vw\"}} spellCheck=\"false\" value={this.state.nameIdValue} onChange={this.handleTextChange} ref={this.inputRef} onBlur={() => {this.closeDropDown()}} onKeyPress={this.handleKeyPress} />\r\n                    <Button onClick={this.handleSignInClick}>Sign In</Button>\r\n                    {this.state.showDropDown ? \r\n                        <div className=\"drop-down\" style={{transform: `translate(${x}px, ${y}px)`, width: `${width}px`}}>\r\n                            <p className=\"autocomplete\">{this.state.autocompleteValue}</p>\r\n                            <DropDown data={this.state.possibleMembers} onItemClick={this.handleDropDownItemClick} format={this.format}/>\r\n                        </div> :\r\n                        \"\"}\r\n                </div>\r\n                {this.state.error ? <h3 className=\"error\">Error: {this.state.error}</h3> : \"\"}\r\n                {this.state.success_txt ? <h3 className=\"success\">{this.state.success_txt}</h3> : \"\"}\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nfunction DropDown ({data, onItemClick, format}) {\r\n    if (data.length > 0) {\r\n        return (\r\n            <ul className=\"drop-down-box\" tabIndex=\"0\">\r\n                {data.map((member, i) => <li key={i}><p onClick={() => onItemClick(member)}>{format(member)}</p></li>)}\r\n            </ul>\r\n        )\r\n    } else {\r\n        return \"\"\r\n    }\r\n\r\n}","import React from 'react'\r\nimport \"./../assets/scss/shared.scss\"\r\nimport Button from \"./button\"\r\nimport {signOut} from \"./gsheetsApi\"\r\n\r\nexport default class SignedInList extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.signOut = this.signOut.bind(this)\r\n        this.state = {pendingOut: []}\r\n    }\r\n\r\n    signOut(id) {\r\n        console.log(id)\r\n        this.setState({pendingOut: [...this.state.pendingOut, id]})\r\n        signOut(id).then(this.props.updateFunc).then(() => {\r\n            setTimeout(() => {\r\n                let pendingOut = this.state.pendingOut\r\n                pendingOut.splice(this.state.pendingOut.indexOf(id), 1)\r\n                this.setState({pendingOut})\r\n            }, 10000)\r\n        })\r\n    }\r\n\r\n    render() {\r\n        console.log(this.state.pendingOut)\r\n        return (\r\n            <ul className=\"series\">\r\n                <li className=\"bold signed-in-list-item\">\r\n                    <h2>Date</h2>\r\n                    <h2>Time In</h2>\r\n                    <h2>Name</h2>\r\n                    <h2>Sign Out</h2>\r\n                </li>\r\n                {\r\n                    this.props.signedIn.length > 0? \r\n                    this.props.signedIn.map(log => <SignedInItem data={log} onSignedOutBtn={() => this.signOut(log.ID)} pendingOutList={this.state.pendingOut} key={log.Name}/>) : \r\n                        <li className=\"flex-center\"><h3>No one is signed in</h3></li>\r\n                }\r\n            </ul>\r\n        )\r\n    }\r\n}\r\n\r\nconst SignedInItem = ({data, onSignedOutBtn, pendingOutList}) => (\r\n    <li className=\"signed-in-list-item\">\r\n        <p>{data.Date}</p>\r\n        <p>{data.Time}</p>\r\n        <p>{data.Name}</p>\r\n        {!pendingOutList.includes(data.ID)? <Button smallBtn onClick={onSignedOutBtn}>Sign Out</Button> : \"\"}\r\n        {/* {console.log(data.Name, pendingOutList.includes(data.ID))} */}\r\n    </li>\r\n)","import React from 'react';\r\nimport \"./assets/scss/shared.scss\"\r\nimport roboticsLogo from \"./assets/images/robotics_logo.svg\"\r\nimport RegisterBox from \"./components/registerBox\"\r\nimport SignInBox from \"./components/signInBox\"\r\nimport SignedInList from \"./components/signedInList\"\r\nimport {getAllSignedIn} from \"./components/gsheetsApi\"\r\n\r\n\r\nexport default class App extends React.Component {\r\n    constructor() {\r\n        super()\r\n\r\n        this.state = {currentlySignedIn: [], isOnline: window.navigator.onLine}\r\n\r\n        this.updateSignedIn = this.updateSignedIn.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        setTimeout(this.updateSignedIn, 500);\r\n\r\n        window.addEventListener('offline', () => {this.onlineChangeHandler(false)});\r\n        window.addEventListener('online', () => {this.onlineChangeHandler(true)});\r\n    }\r\n\r\n    onlineChangeHandler(isOnline) {\r\n        this.setState({isOnline: isOnline})\r\n    }\r\n\r\n    updateSignedIn() {\r\n        getAllSignedIn().then(currentlySignedIn => this.setState({currentlySignedIn}))\r\n    }\r\n\r\n    render() {\r\n        if (this.state.isOnline) {\r\n            return (\r\n                <div className=\"col flex-center\">\r\n                    <div className=\"row\" id=\"header\">\r\n                        <h1 className=\"title\">Titan Robotics Hour Logging</h1>\r\n                        <img id=\"logo\" src={roboticsLogo} alt=\"<Robotics logo>\"/>\r\n                    </div>\r\n                    <div className=\"separator bold\">Sign In or Register</div>\r\n                    <SignInBox updateFunc={this.updateSignedIn}/>\r\n                    <h2 className=\"no-bold\">or</h2>\r\n                    <RegisterBox/>\r\n                    <div className=\"separator bold\">Currently Signed In</div>\r\n                    <SignedInList signedIn={this.state.currentlySignedIn} updateFunc={this.updateSignedIn} />\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <div className=\"col flex-center\">\r\n                    <h2 className=\"bold\">Waiting for internet connection...</h2>\r\n                    <div className=\"loader\"></div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals(() => {});\r\n"],"sourceRoot":""}